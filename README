# Caffeine

CoffeeScript -> "Scheme" -> JavaScript

Compiles CoffeeScript to an intermediary Scheme-like language, which is then translated to JavaScript.

## Design decisions

* `a = (x, y) -> x + y` translates to this:

	`(= a (fn (arglist x y) (+ x y)))`

	There are two things to note here. One is "arglist", which is just a list of arguments - I do it this way because just doing `(x y)` would break abstraction (seems like we're calling x with y). 
	The other is that we don't have named functions, just 

* The `catch` part of a try/catch is now a function. 
